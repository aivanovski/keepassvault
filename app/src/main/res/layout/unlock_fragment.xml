<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <import type="com.ivanovsky.passnotes.data.entity.KeyType" />

        <variable
            name="viewModel"
            type="com.ivanovsky.passnotes.presentation.unlock.UnlockViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@id/rootLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <com.ivanovsky.passnotes.presentation.core.widget.ErrorPanelView
            android:id="@+id/errorPanelView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:layout_constraintTop_toTopOf="parent"
            app:onButtonClicked="@{() -> viewModel.onErrorPanelButtonClicked()}"
            app:screenState="@{viewModel.screenState}"
            app:screenStateHandler="@{viewModel.screenStateHandler}" />

        <com.ivanovsky.passnotes.presentation.core.widget.ScreenStateView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:screenState="@{viewModel.screenState}"
            app:screenStateHandler="@{viewModel.screenStateHandler}" />

        <com.ivanovsky.passnotes.presentation.core.widget.CellLinearLayout
            android:id="@+id/databaseFileContainer"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            app:layout_constraintTop_toBottomOf="@id/errorPanelView"
            app:screenState="@{viewModel.screenState}"
            app:screenStateHandler="@{viewModel.screenStateHandler}"
            app:viewModels="@{viewModel.fileCellViewModels}"
            app:viewTypes="@{viewModel.fileCellTypes}" />

        <com.ivanovsky.passnotes.presentation.core.widget.MaterialSpinner
            android:id="@+id/keyTypeSpinner"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="@dimen/element_margin"
            android:layout_marginTop="@dimen/element_margin"
            android:layout_marginEnd="@dimen/element_margin"
            app:hint="@{@string/unlock_type}"
            app:item="@{viewModel.selectedKeyTypeTitle}"
            app:items="@{viewModel.allKeyTypes}"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/databaseFileContainer"
            app:onItemSelected="@{(item, idx) -> viewModel.onKeyTypeSelected(item)}"
            app:screenState="@{viewModel.screenState}"
            app:screenStateHandler="@{viewModel.screenStateHandler}" />

        <LinearLayout
            android:id="@+id/keyInputLayout"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="@dimen/element_margin"
            android:layout_marginTop="@dimen/element_margin"
            android:layout_marginEnd="@dimen/element_margin"
            android:orientation="vertical"
            app:layout_constraintTop_toBottomOf="@id/keyTypeSpinner"
            app:screenState="@{viewModel.screenState}"
            app:screenStateHandler="@{viewModel.screenStateHandler}">

            <com.ivanovsky.passnotes.presentation.core.widget.SecretInputView
                android:id="@+id/password"
                hint="@{@string/password}"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:text="@={viewModel.password}"
                app:visible="@{viewModel.selectedKeyType == KeyType.PASSWORD}" />

            <com.ivanovsky.passnotes.presentation.core.widget.SelectorView
                android:id="@+id/keyFileSelector"
                hint="@{@string/key_file}"
                onChangeClicked="@{() -> viewModel.onChangeKeyFileButtonClicked()}"
                text="@{viewModel.selectedKeyFileTitle}"
                textColor="@{viewModel.selectedKeyFileTitleColor}"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:visible="@{viewModel.selectedKeyType == KeyType.KEY_FILE}" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/buttonLayout"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/element_margin"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            app:layout_constraintTop_toBottomOf="@id/keyInputLayout"
            app:screenState="@{viewModel.screenState}"
            app:screenStateHandler="@{viewModel.screenStateHandler}">

            <Button
                android:id="@+id/unlockButton"
                style="@style/Material.ContainedButton"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="@dimen/element_margin"
                android:layout_marginEnd="@dimen/element_margin"
                android:layout_weight="1"
                android:onClick="@{() -> viewModel.onUnlockButtonClicked()}"
                android:text="@string/unlock" />

            <ImageView
                android:id="@+id/biometricUnlockButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginEnd="@dimen/element_margin"
                android:background="?android:attr/selectableItemBackgroundBorderless"
                android:onClick="@{v -> viewModel.onBiometricLoginButtonClicked()}"
                android:src="@drawable/ic_fingerprint_48dp"
                app:imageTint="@{viewModel.biometricIconTint}"
                app:visible="@{viewModel.isBiometricAvailable}"
                tools:visibility="visible" />

        </LinearLayout>

        <com.ivanovsky.passnotes.presentation.core.widget.ExpandableFloatingActionButton
            android:id="@+id/fab"
            style="@style/Material.FloatingActionButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/material_fab_margin"
            android:layout_marginBottom="@dimen/half_margin"
            app:fabItems="@{viewModel.fabItems}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:onFabItemClicked="@{viewModel.fabClickListener}"
            app:visible="@{viewModel.isFabButtonVisible}" />

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>