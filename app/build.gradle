apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0

android {
	def ext = rootProject.extensions.ext

	compileSdkVersion ext.android.compileSdk
	buildToolsVersion ext.android.buildTools

	defaultConfig {
		applicationId 'com.ivanovsky.passnotes'
		minSdkVersion ext.android.minSdk
		targetSdkVersion ext.android.targetSdk
		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
		vectorDrawables.useSupportLibrary true
		multiDexEnabled true

		buildConfigField "String[]", "DEBUG_FILE_NAME_PATTERNS", "null"
		buildConfigField "String[]", "DEBUG_PASSWORDS", "null"

		buildConfigField "String", "DROPBOX_APP_KEY", "$ext.dropboxAppKey"
		buildConfigField "String", "DROPBOX_APP_SECRET", "$ext.dropboxAppSecret"
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		androidTest.java.srcDirs += 'src/androidTest/kotlin'
		test.java.srcDirs += 'src/test/kotlin'
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	signingConfigs {
		debug {
			storeFile file("../keys/debug.keystore")
		}
		release {
			storeFile file("../keys/release.keystore")
			storePassword "zimber88"
			keyAlias "alexei.ivanovski"
			keyPassword "zimber88"
		}
	}

	buildTypes {
		debug {
			debuggable true
			minifyEnabled false
			signingConfig signingConfigs.debug

			if (ext.debugFileNameToPasswordMap != null) {
				buildConfigField "String[]", "DEBUG_FILE_NAME_PATTERNS", "{" +
						ext.debugFileNameToPasswordMap.keySet().collect{"\"${it}\""}.join(",") +
						"}"
				buildConfigField "String[]", "DEBUG_PASSWORDS", "{" +
						ext.debugFileNameToPasswordMap.values().collect{"\"${it}\""}.join(",") +
						"}"
			}
		}
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	testOptions {
		unitTests {
			includeAndroidResources = true
		}
	}

	kapt {
		generateStubs = true
	}

	packagingOptions {
		exclude 'META-INF/proguard/coroutines.pro' //TODO: should be removed
	}

	androidExtensions {
		experimental = true
	}
}

def roomVersion = '2.2.5'
def lifecycleVersion = '2.2.0'
def androidXVersion = '1.1.0'

def daggerVersion = '2.16'
def annimonStreamApiVersion = '1.1.4'
def dropboxVersion = '3.0.11'
def okHttpVersion = '3.10.0'
def apacheCommonsLangVersion = '3.0'

// Test
def jUnitVersion = '4.12'
def mockitoVersion = '2.19.1'
def robolectricVersion = '3.5.1'
def truthVersion = '0.42'
def androidXTestVersion = '1.1.0'

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])

	// Test dependencies
	testImplementation "junit:junit:$jUnitVersion"
	testImplementation "org.mockito:mockito-core:$mockitoVersion"
	testImplementation "com.google.truth:truth:$truthVersion"
	testImplementation "org.robolectric:robolectric:$robolectricVersion"
	testImplementation "org.robolectric:shadows-multidex:$robolectricVersion"

	// Android test dependencies
	androidTestImplementation "androidx.test.ext:junit:$androidXTestVersion"
	androidTestImplementation "androidx.test:rules:$androidXTestVersion"
	androidTestImplementation "androidx.room:room-testing:2.0.0"
	androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

	// MultiDex
	implementation "androidx.multidex:multidex:2.0.1"

	// Dagger
	implementation "com.google.dagger:dagger:$daggerVersion"
	kapt "com.google.dagger:dagger-compiler:$daggerVersion"

	// Room
	implementation "androidx.room:room-runtime:$roomVersion"
	kapt "androidx.room:room-compiler:$roomVersion"
	androidTestImplementation "androidx.room:room-testing:$roomVersion"

	// Lifecycle libraries
	implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

	// AndroidX libraries
	implementation "androidx.appcompat:appcompat:$androidXVersion"
	implementation "com.google.android.material:material:$androidXVersion"
	implementation "androidx.legacy:legacy-support-v4:1.0.0"
	implementation "androidx.recyclerview:recyclerview:$androidXVersion"
	implementation "androidx.cardview:cardview:1.0.0"
	implementation "androidx.annotation:annotation:$androidXVersion"
	implementation "androidx.constraintlayout:constraintlayout:1.1.3"

	// Java stream API
	implementation "com.annimon:stream:$annimonStreamApiVersion"

	//Apache Commons Lang
	implementation "org.apache.commons:commons-lang3:$apacheCommonsLangVersion"

	// Kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"

	// KeePassJava2
	implementation project(':libs:KeePassJava2-database')
	implementation project(':libs:KeePassJava2-kdbx')
	implementation project(':libs:KeePassJava2-simple')

	// Dropbox
	implementation "com.dropbox.core:dropbox-core-sdk:$dropboxVersion"

	// OkHttp
	implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

	// Stetho
	implementation "com.facebook.stetho:stetho:1.5.1"
}
